// Generated by vtkWrapPythonInit in VTK/Wrapping
#include "vtkPythonUtil.h"
#include "vtkSystemIncludes.h"
#include <cstring>
// Handle compiler warning messages, etc.
#if defined( _MSC_VER ) && !defined(VTK_DISPLAY_WIN32_WARNINGS)
#pragma warning ( disable : 4706 )
#endif // Windows Warnings

extern "C" { void PyVTKAddFile_vtkMRMLAnnotationSnapshotNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationSnapshotNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationSnapshotStorageNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationSnapshotStorageNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationHierarchyNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationHierarchyNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationStorageNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationStorageNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationDisplayNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationDisplayNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationTextDisplayNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationTextDisplayNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationControlPointsNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationControlPointsNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationControlPointsStorageNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationControlPointsStorageNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationPointDisplayNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationPointDisplayNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationLinesNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationLinesNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationLinesStorageNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationLinesStorageNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationLineDisplayNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationLineDisplayNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationRulerNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationRulerNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationRulerStorageNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationRulerStorageNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationFiducialNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationFiducialNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationFiducialsStorageNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationFiducialsStorageNode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationROINode(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMRMLAnnotationROINode(PyObject *dict); }

static PyMethodDef PyvtkSlicerAnnotationsModuleMRMLPython_Methods[] = {
{nullptr, nullptr, 0, nullptr}};

static PyModuleDef PyvtkSlicerAnnotationsModuleMRMLPython_Module = {
  PyModuleDef_HEAD_INIT,
  "vtkSlicerAnnotationsModuleMRMLPython", // m_name
  nullptr, // m_doc
  0, // m_size
  PyvtkSlicerAnnotationsModuleMRMLPython_Methods, //m_methods
  nullptr, // m_reload
  nullptr, // m_traverse
  nullptr, // m_clear
  nullptr  // m_free
};
extern  "C" {VTK_ABI_EXPORT PyObject *real_initvtkSlicerAnnotationsModuleMRMLPython(const char * /*unused*/); }

PyObject *real_initvtkSlicerAnnotationsModuleMRMLPython(const char * /*unused*/)
{
  PyObject *m = PyModule_Create(&PyvtkSlicerAnnotationsModuleMRMLPython_Module);
  PyObject *d = PyModule_GetDict(m);
  if (!d)
  {
    Py_FatalError("can't get dictionary for module vtkSlicerAnnotationsModuleMRMLPython");
  }

  const char *depends[8] = {
    "MRMLCorePython",
    "vtkAddonPython",
    "vtkITKPython",
    "vtkSegmentationCorePython",
    "vtkTeemPython",
    "MRMLLogicPython",
    "MRMLDisplayableManagerPython",
    "MRMLCLIPython",
  };

  for (int i = 0; i < 8; i++)
  {
    if (!vtkPythonUtil::ImportModule(depends[i], d))
    {
      Py_DECREF(m);
      return PyErr_Format(PyExc_ImportError,
        "Failed to load vtkSlicerAnnotationsModuleMRMLPython: No module named %s",
        depends[i]);
    }
  }

  if (!vtkPythonUtil::IsInitialized())
  {
    Py_DECREF(m);
    return PyErr_Format(PyExc_ImportError,
      "Initialization failed for vtkSlicerAnnotationsModuleMRMLPython, not compatible with %s",
      depends[0]);
  }

  PyVTKAddFile_vtkMRMLAnnotationSnapshotNode(d);
  PyVTKAddFile_vtkMRMLAnnotationSnapshotNode(d);
  PyVTKAddFile_vtkMRMLAnnotationSnapshotStorageNode(d);
  PyVTKAddFile_vtkMRMLAnnotationSnapshotStorageNode(d);
  PyVTKAddFile_vtkMRMLAnnotationHierarchyNode(d);
  PyVTKAddFile_vtkMRMLAnnotationHierarchyNode(d);
  PyVTKAddFile_vtkMRMLAnnotationNode(d);
  PyVTKAddFile_vtkMRMLAnnotationNode(d);
  PyVTKAddFile_vtkMRMLAnnotationStorageNode(d);
  PyVTKAddFile_vtkMRMLAnnotationStorageNode(d);
  PyVTKAddFile_vtkMRMLAnnotationDisplayNode(d);
  PyVTKAddFile_vtkMRMLAnnotationDisplayNode(d);
  PyVTKAddFile_vtkMRMLAnnotationTextDisplayNode(d);
  PyVTKAddFile_vtkMRMLAnnotationTextDisplayNode(d);
  PyVTKAddFile_vtkMRMLAnnotationControlPointsNode(d);
  PyVTKAddFile_vtkMRMLAnnotationControlPointsNode(d);
  PyVTKAddFile_vtkMRMLAnnotationControlPointsStorageNode(d);
  PyVTKAddFile_vtkMRMLAnnotationControlPointsStorageNode(d);
  PyVTKAddFile_vtkMRMLAnnotationPointDisplayNode(d);
  PyVTKAddFile_vtkMRMLAnnotationPointDisplayNode(d);
  PyVTKAddFile_vtkMRMLAnnotationLinesNode(d);
  PyVTKAddFile_vtkMRMLAnnotationLinesNode(d);
  PyVTKAddFile_vtkMRMLAnnotationLinesStorageNode(d);
  PyVTKAddFile_vtkMRMLAnnotationLinesStorageNode(d);
  PyVTKAddFile_vtkMRMLAnnotationLineDisplayNode(d);
  PyVTKAddFile_vtkMRMLAnnotationLineDisplayNode(d);
  PyVTKAddFile_vtkMRMLAnnotationRulerNode(d);
  PyVTKAddFile_vtkMRMLAnnotationRulerNode(d);
  PyVTKAddFile_vtkMRMLAnnotationRulerStorageNode(d);
  PyVTKAddFile_vtkMRMLAnnotationRulerStorageNode(d);
  PyVTKAddFile_vtkMRMLAnnotationFiducialNode(d);
  PyVTKAddFile_vtkMRMLAnnotationFiducialNode(d);
  PyVTKAddFile_vtkMRMLAnnotationFiducialsStorageNode(d);
  PyVTKAddFile_vtkMRMLAnnotationFiducialsStorageNode(d);
  PyVTKAddFile_vtkMRMLAnnotationROINode(d);
  PyVTKAddFile_vtkMRMLAnnotationROINode(d);

  vtkPythonUtil::AddModule("vtkSlicerAnnotationsModuleMRMLPython");

  return m;
}

