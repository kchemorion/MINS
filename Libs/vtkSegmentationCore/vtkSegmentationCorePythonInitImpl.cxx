// Generated by vtkWrapPythonInit in VTK/Wrapping
#include "vtkPythonUtil.h"
#include "vtkSystemIncludes.h"
#include <cstring>
// Handle compiler warning messages, etc.
#if defined( _MSC_VER ) && !defined(VTK_DISPLAY_WIN32_WARNINGS)
#pragma warning ( disable : 4706 )
#endif // Windows Warnings

extern "C" { void PyVTKAddFile_vtkOrientedImageData(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkOrientedImageData(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkOrientedImageDataResample(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkOrientedImageDataResample(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkSegment(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkSegment(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkSegmentation(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkSegmentation(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkSegmentationConversionParameters(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkSegmentationConversionParameters(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkSegmentationConversionPath(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkSegmentationConversionPath(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkSegmentationConverter(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkSegmentationConverter(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkSegmentationConverterFactory(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkSegmentationConverterFactory(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkSegmentationConverterRule(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkSegmentationConverterRule(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkSegmentationHistory(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkSegmentationHistory(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkSegmentationModifier(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkSegmentationModifier(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkTopologicalHierarchy(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkTopologicalHierarchy(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkBinaryLabelmapToClosedSurfaceConversionRule(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkBinaryLabelmapToClosedSurfaceConversionRule(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkClosedSurfaceToBinaryLabelmapConversionRule(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkClosedSurfaceToBinaryLabelmapConversionRule(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkCalculateOversamplingFactor(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkCalculateOversamplingFactor(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkClosedSurfaceToFractionalLabelmapConversionRule(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkClosedSurfaceToFractionalLabelmapConversionRule(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkFractionalLabelmapToClosedSurfaceConversionRule(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkFractionalLabelmapToClosedSurfaceConversionRule(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkPolyDataToFractionalLabelmapFilter(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkPolyDataToFractionalLabelmapFilter(PyObject *dict); }

static PyMethodDef PyvtkSegmentationCorePython_Methods[] = {
{nullptr, nullptr, 0, nullptr}};

static PyModuleDef PyvtkSegmentationCorePython_Module = {
  PyModuleDef_HEAD_INIT,
  "vtkSegmentationCorePython", // m_name
  nullptr, // m_doc
  0, // m_size
  PyvtkSegmentationCorePython_Methods, //m_methods
  nullptr, // m_reload
  nullptr, // m_traverse
  nullptr, // m_clear
  nullptr  // m_free
};
extern  "C" {VTK_ABI_EXPORT PyObject *real_initvtkSegmentationCorePython(const char * /*unused*/); }

PyObject *real_initvtkSegmentationCorePython(const char * /*unused*/)
{
  PyObject *m = PyModule_Create(&PyvtkSegmentationCorePython_Module);
  PyObject *d = PyModule_GetDict(m);
  if (!d)
  {
    Py_FatalError("can't get dictionary for module vtkSegmentationCorePython");
  }

  vtkPythonUtil::Initialize();

  PyVTKAddFile_vtkOrientedImageData(d);
  PyVTKAddFile_vtkOrientedImageData(d);
  PyVTKAddFile_vtkOrientedImageDataResample(d);
  PyVTKAddFile_vtkOrientedImageDataResample(d);
  PyVTKAddFile_vtkSegment(d);
  PyVTKAddFile_vtkSegment(d);
  PyVTKAddFile_vtkSegmentation(d);
  PyVTKAddFile_vtkSegmentation(d);
  PyVTKAddFile_vtkSegmentationConversionParameters(d);
  PyVTKAddFile_vtkSegmentationConversionParameters(d);
  PyVTKAddFile_vtkSegmentationConversionPath(d);
  PyVTKAddFile_vtkSegmentationConversionPath(d);
  PyVTKAddFile_vtkSegmentationConverter(d);
  PyVTKAddFile_vtkSegmentationConverter(d);
  PyVTKAddFile_vtkSegmentationConverterFactory(d);
  PyVTKAddFile_vtkSegmentationConverterFactory(d);
  PyVTKAddFile_vtkSegmentationConverterRule(d);
  PyVTKAddFile_vtkSegmentationConverterRule(d);
  PyVTKAddFile_vtkSegmentationHistory(d);
  PyVTKAddFile_vtkSegmentationHistory(d);
  PyVTKAddFile_vtkSegmentationModifier(d);
  PyVTKAddFile_vtkSegmentationModifier(d);
  PyVTKAddFile_vtkTopologicalHierarchy(d);
  PyVTKAddFile_vtkTopologicalHierarchy(d);
  PyVTKAddFile_vtkBinaryLabelmapToClosedSurfaceConversionRule(d);
  PyVTKAddFile_vtkBinaryLabelmapToClosedSurfaceConversionRule(d);
  PyVTKAddFile_vtkClosedSurfaceToBinaryLabelmapConversionRule(d);
  PyVTKAddFile_vtkClosedSurfaceToBinaryLabelmapConversionRule(d);
  PyVTKAddFile_vtkCalculateOversamplingFactor(d);
  PyVTKAddFile_vtkCalculateOversamplingFactor(d);
  PyVTKAddFile_vtkClosedSurfaceToFractionalLabelmapConversionRule(d);
  PyVTKAddFile_vtkClosedSurfaceToFractionalLabelmapConversionRule(d);
  PyVTKAddFile_vtkFractionalLabelmapToClosedSurfaceConversionRule(d);
  PyVTKAddFile_vtkFractionalLabelmapToClosedSurfaceConversionRule(d);
  PyVTKAddFile_vtkPolyDataToFractionalLabelmapFilter(d);
  PyVTKAddFile_vtkPolyDataToFractionalLabelmapFilter(d);

  vtkPythonUtil::AddModule("vtkSegmentationCorePython");

  return m;
}

